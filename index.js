// cisa_scraper.js
// weird, i get all data when i scrape this at least to 2021
const axios = require('axios');
const cheerio = require('cheerio');
const express = require('express')

const app = express();
const PORT = 3000;

app.get('/', (req, res)=>{
    res.json("Welcome to root URL of Server");
});

//gets data
async function getdata(){
    var ListObj = []
    const url = 'https://www.cisa.gov/known-exploited-vulnerabilities-catalog';

    try{
        const response = await axios.get(url);
        const html = response.data;
        const $ = cheerio.load(html);
        
        $('tr').each((index, element) => {
            const cveName = $(element).find('a').text();
            const nistUrl = $(element).find('a').attr("href")
            const vendor = $(element).find('.vendor-project').text();
            const product = $(element).find('.product').text();
            const dateAdded = $(element).find('.date-added').text();
            const desc = $(element).find('.desc').text();
            const action = $(element).find('.action').text();
            const dueDate = $(element).find('.due-date').text();
            const notes = $(element).find('.notes').text();

            obj = {
                "cveName":cveName,
                "nistUrl":nistUrl,
                "vendor":vendor,
                "product":product,
                "dateAdded":dateAdded,
                "desc":desc,
                "action":action,
                "dueDate":dueDate,
                "notes":notes
            }

            ListObj.push(obj)
        });
        const copy = ListObj.slice(1)
        return copy
        
    }
    catch{
        console.log("dont work")
    }
}

app.get('/all', async (req, res)=>{
    try {
        const data = await getdata();
        res.json(data);
    } catch (error) {
        res.status(500).json({ error: 'Failed to fetch data' });
    }
});

// test url
// http://localhost:3000/2023-07-31
//
// note need to have /data/ or /cve/ before parms
// it will get confused what app.get :/
app.get('/date/:date', async (req, res)=>{
    const data = await getdata();
    const dateToFilter = req.params.date;
    const filteredList = data.filter(element => {
        return element.dateAdded.includes(dateToFilter);
    });

    if(filteredList.length == 0){
        return res.json("no data")
    }
    
    res.json(filteredList)

});

//test url
// http://localhost:3000/cve/CVE-2023-35081
app.get('/cve/:cve', async (req, res) => {
    try {
        const data = await getdata();
        const cveToFilter = req.params.cve.toLowerCase();
        const filteredList = data.filter((element) => {
            return element.cveName.toLowerCase().includes(cveToFilter);
        });

        if(filteredList.length == 0){
            return res.json("no data")
        }

        res.json(filteredList);
    } catch (error) {
        res.status(500).json({ error: 'Failed to fetch data' });
    }
});


//test url
// http://localhost:3000/vendor/apple
app.get('/vendor/:vendor', async (req, res) => {
    try {
        const data = await getdata();
        const cveToFilter = req.params.vendor.toLowerCase();
        const filteredList = data.filter((element) => {
            return element.vendor.toLowerCase().includes(cveToFilter);
        });

        if(filteredList.length == 0){
            return res.json("no data")
        }

        res.json(filteredList);
    } catch (error) {
        res.status(500).json({ error: 'Failed to fetch data' });
    }
});

//test url
// http://localhost:3000/product/http
app.get('/product/:product', async (req, res) => {
    try {
        const data = await getdata();
        const cveToFilter = req.params.product.toLowerCase(); 
        const filteredList = data.filter((element) => {
            return element.product.toLowerCase().includes(cveToFilter);
        });

        if(filteredList.length == 0){
            return res.json("no data")
        }

        res.json(filteredList);
    } catch (error) {
        res.status(500).json({ error: 'Failed to fetch data' });
    }
});


//test url
// http://localhost:3000/description/sql
app.get('/description/:description', async (req, res) => {
    try {
        const data = await getdata();
        const cveToFilter = req.params.description.toLowerCase();
        const filteredList = data.filter((element) => {
            return element.desc.toLowerCase().includes(cveToFilter);
        });

        if(filteredList.length == 0){
            return res.json("no data")
        }

        res.json(filteredList);
    } catch (error) {
        res.status(500).json({ error: 'Failed to fetch data' });
    }
});

//test url
// http://localhost:3000/duedate/2023
app.get('/duedate/:duedate', async (req, res) => {
    try {
        const data = await getdata();
        const cveToFilter = req.params.duedate.toLowerCase();
        const filteredList = data.filter((element) => {
            return element.dueDate.toLowerCase().includes(cveToFilter);
        });

        if(filteredList.length == 0){
            return res.json("no data")
        }

        res.json(filteredList);
    } catch (error) {
        res.status(500).json({ error: 'Failed to fetch data' });
    }
});

app.listen(PORT, (error) =>{
    if(!error)
        console.log("Server is Successfully Running, and App is listening on port "+ PORT)
    else 
        console.log("Error occurred, server can't start", error);
    }
);

